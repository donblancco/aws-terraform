# Local .terraform directories
.terraform/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# == Terraform ==
# Local .terraform directories
.terraform/

# Terraform state files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Override files (use with caution; usually local)
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore Terraform plan output
*.tfplan

# Ignore CLI configuration files
.terraformrc
terraform.rc

# == Sensitive Files ==
# Exclude tfvars files containing sensitive data (e.g., passwords, private keys).
*.tfvars
*.tfvars.json

# == AWS Credentials ==
# Ignore AWS CLI credentials file
.aws/credentials
.aws/config

# == Editor & OS Artifacts ==
# macOS
.DS_Store

# VSCode
.vscode/
# JetBrains IDEs
.idea/
*.iml

# Sublime Text
*.sublime-workspace
*.sublime-project

# Vim swap files
*.swp

# Emacs temp files
*~

# == Logs & Misc ==
# Logs
*.log

# Temporary files
tmp/
*.tmp

# Node modules (if any frontend code exists)
node_modules/

# Local environment files
.env
.env.*.local

# == Optional: Add other patterns below as needed ==